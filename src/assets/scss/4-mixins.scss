@mixin container($max: 1450px, $margin: 30px) {
	@content;
	max-width: $max;
	margin-right: $margin;
	margin-left: $margin;
	@media (min-width: #{$max + ($margin*2)}) {
		width: 100%;
		margin-right: auto;
		margin-left: auto;
	}
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin code($var, $attr, $bg) {
	background: $bg;
	position: relative;
	z-index: 1;
  &::before,
  &::after {
		@include fluid-type(850px, 1450px, 14px, 24px);
    position: absolute;
    font-weight: 700;
    color: lighten($onyx, 18%);
    font-family: $headings;
    left: 0;
    right: 0;
    width: 100%;
		z-index: 2;
		white-space: nowrap;
		overflow: hidden;
  }
  &::before {
    top: 0;
    @media (min-width: $md) {
			content: "#{$var}: (#{$attr}) => {";
			padding: 1.25rem 1.25rem 0.5rem;
      background: $bg;
    }
  }
  &::after {
    bottom: 0;
    text-align: right;
    @media (min-width: $md) {
			content: "}";
			padding: 1rem 1.25rem 1.25rem;
      background: linear-gradient(
        to top,
        rgba($bg, 1),
        rgba($bg, 0.85) 50%,
        rgba($bg, 0.1)
      );
    }
  }
}